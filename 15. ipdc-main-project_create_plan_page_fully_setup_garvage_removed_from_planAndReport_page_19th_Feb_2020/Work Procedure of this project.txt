[ 6th February, 2020 ] [Step-1]
>> vue create ipdc-main-project
	->Babel
	->Router
	->Vuex
	->Unit Testing (Jest)
>> vue add vuetify
>> npm install -save auth0-js
====================================================================================================================================================================================
[ 6th February, 2020 ] [Step-2]

>> npm install --save-dev @fortawesome/fontawesome-free
  [in the main.js file insert fontawesome]
  [https://medium.com/front-end-weekly/how-to-use-fon-awesome-5-on-vuejs-project-ff0f28310821]
  {
    import '@fortawesome/fontawesome-free/css/all.css'
    import '@fortawesome/fontawesome-free/js/all.js'
  }
>> npm install materialize-css@next
>> npm install onsenui vue-onsenui
  [in the main.js file insert fontawesome]
  [https://onsen.io/v2/guide/vue/]
  {
    import 'onsenui/css/onsenui.css';
    import 'onsenui/css/onsen-css-components.css';

    import Vue from 'vue';
    import VueOnsen from 'vue-onsenui';

    Vue.use(VueOnsen);
  }
====================================================================================================================================================================================
[ 6th February, 2020 ] [Step-3]

MemberSwip is the parent swip page which can swip Member, AssociateMember, PriliminaryMember, SupporterMember.
Mutation observer also added in MemberSwip page.
This mutation can track if user swip any page. It actually track which tab is active or not.
====================================================================================================================================================================================
[ 7th February, 2020 ] [Step-4]

Home page has been added. This Home page have the sub pages (Login and Dashboard).
The parent component is Home page. Login and Dashboard can swip each other.
====================================================================================================================================================================================
[ 10th February, 2020 ] [Step-5]
>> npm install axios

setup axios url = http://localhost:50009/reporting/v1/all/search?page=1&pageSize=10
main url = http://localhost:50009/reporting/v1/all
and call this service from PlanAndReport.vue file.
Successfully got the response and the result.

Make the port specific as :
>> npm run serve -- --port 8888
or in th package.json file update the script from 
["serve": "vue-cli-service serve]
to
["serve": "vue-cli-service serve --port 8081"]

How to specific the port for project = https://stackoverflow.com/questions/47219819/how-to-change-port-number-in-vue-cli-project
====================================================================================================================================================================================
[ 10th February, 2020 ] [Step-6]

Tried to connect RM API using axios and PlanAndReport.vue method used for axios response.
====================================================================================================================================================================================
[ 12th February, 2020 ] [Step-7]

Successfully send the bearer from the project and get the response result from API. [PlanAndReport.vue] [in the click method]

const token = 'Bearer ' + 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlJEUkNSVVkwUkVaQ1JUWTJSREl6TlRkQk1VUTVPVEkyTkRCQ1JqZzBSRU0zUmpBMFF6SkNRUSJ9.eyJodHRwczovL3JlcG9ydGluZ21vZHVsZS5jb20vY2xhaW1zL0lzU3lzdGVtQWRtaW4iOnRydWUsImh0dHBzOi8vcmVwb3J0aW5nbW9kdWxlLmNvbS9jbGFpbXMvSXNTeXN0ZW1Vc2VyIjp0cnVlLCJodHRwczovL3JlcG9ydGluZ21vZHVsZS5jb20vY2xhaW1zL3VzZXJuYW1lIjoicml6d2FudWxAc2ltcGxleGh1Yi5jb20iLCJpc3MiOiJodHRwczovL2Rldi1udXpmcTU2My5hdS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWQyZWIwYjY5NDk1MjYwZWJjNWQ2YTVmIiwiYXVkIjpbImh0dHA6Ly8zNS4yMDEuMC4zOS8iLCJodHRwczovL2Rldi1udXpmcTU2My5hdS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNTgxNDc4NzU2LCJleHAiOjE1ODE0ODU5NTYsImF6cCI6IjhWbmdrVmI1MWdra0Jadml0U29yZEJONGw4cklPd2V0Iiwic2NvcGUiOiJvcGVuaWQgZW1haWwifQ.M2R0DKE5sVMIYIWoqSH8DbZHUwGUwxkmnz7W9m_7QDM4YWo0-F9pzcMCkyXxH8GeJk-JmBA1lKitmJP-VesC0hOtzwASHaK3b9RV1yHu2_NucR-YuSQDgbjwuTB_McY_IIbGnd6ogG6CIxeXcwAUOnvRGb3CvDyduFCWC-aMbZVp-UImvzcFBxPveZ9dtCMaMquygyRkgvvvwBaO3k0fDqCv5z4dSe3i4k4V4_5GHygpYca1h0U4uMWHhpz4E8jE6ZkImw41X8FFe3tawLs31XyO_9pSXPCpDovPUi_5d8dKGoyGwem288oZSKwtX1Ehh_e6zLspkz1RHGUnO4r3yw';
const URL = "http://localhost:50009/reporting/v1/all/search?page=1&pageSize=10";
axios.get(URL, {
		headers: {
			Authorization: token 
		} 
	})
	.then((response) => {
		console.log(response);
		console.log(response.data);
	})
	.catch((error) => {
		console.log(error)
	})
====================================================================================================================================================================================
[ 12th February, 2020 ] [Step-8]

Successfully send the bearer from MY SERVICE FILE (UnitPlanReportService.js) and get the response result from API. [PlanAndReport.vue] [in the click method]

import axios from 'axios';
axios.defaults.baseURL = 'http://localhost:50009/reporting/v1/all';
const token = 'Bearer ' + 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlJEUkNSVVkwUkVaQ1JUWTJSREl6TlRkQk1VUTVPVEkyTkRCQ1JqZzBSRU0zUmpBMFF6SkNRUSJ9.eyJodHRwczovL3JlcG9ydGluZ21vZHVsZS5jb20vY2xhaW1zL0lzU3lzdGVtQWRtaW4iOnRydWUsImh0dHBzOi8vcmVwb3J0aW5nbW9kdWxlLmNvbS9jbGFpbXMvSXNTeXN0ZW1Vc2VyIjp0cnVlLCJodHRwczovL3JlcG9ydGluZ21vZHVsZS5jb20vY2xhaW1zL3VzZXJuYW1lIjoicml6d2FudWxAc2ltcGxleGh1Yi5jb20iLCJpc3MiOiJodHRwczovL2Rldi1udXpmcTU2My5hdS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWQyZWIwYjY5NDk1MjYwZWJjNWQ2YTVmIiwiYXVkIjpbImh0dHA6Ly8zNS4yMDEuMC4zOS8iLCJodHRwczovL2Rldi1udXpmcTU2My5hdS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNTgxNDc4NzU2LCJleHAiOjE1ODE0ODU5NTYsImF6cCI6IjhWbmdrVmI1MWdra0Jadml0U29yZEJONGw4cklPd2V0Iiwic2NvcGUiOiJvcGVuaWQgZW1haWwifQ.M2R0DKE5sVMIYIWoqSH8DbZHUwGUwxkmnz7W9m_7QDM4YWo0-F9pzcMCkyXxH8GeJk-JmBA1lKitmJP-VesC0hOtzwASHaK3b9RV1yHu2_NucR-YuSQDgbjwuTB_McY_IIbGnd6ogG6CIxeXcwAUOnvRGb3CvDyduFCWC-aMbZVp-UImvzcFBxPveZ9dtCMaMquygyRkgvvvwBaO3k0fDqCv5z4dSe3i4k4V4_5GHygpYca1h0U4uMWHhpz4E8jE6ZkImw41X8FFe3tawLs31XyO_9pSXPCpDovPUi_5d8dKGoyGwem288oZSKwtX1Ehh_e6zLspkz1RHGUnO4r3yw';
const URL = "http://localhost:50009/reporting/v1/all/search?page=1&pageSize=10";

export default class PostService{
    getAllPosts() {
        return axios.get(URL, {
            headers: {
                   Authorization: token 
               } 
           });
    }
}
====================================================================================================================================================================================
[ 12th February, 2020 ] [Step-9]

Adding some button in PlanAndReport.vue and get response result successfully.
====================================================================================================================================================================================
[ 13th February, 2020 ] [Step-10]

Added get method inside the axios after the header. It works properly.
export default class PostService{
    getAllPosts() {
        return axios.get(URL, {							////Difference is here, there is a get request method after the axios [return axios.get(){}]////
            headers: {
                   Authorization: token 
               } 
        });
    }
    getPlanById() {
        return axios(BASE_URL + URL_PLAN, {				////Difference is here, No method after the axios [return axios()]////
            headers: {
                   Authorization: token 
               },
            method: 'get'								////In here I have added the get request method, we can change it to any request method////
        });
    }
}
====================================================================================================================================================================================
[ 14th February, 2020 ] [Step-11]

In the post method, there is header added. There are 2 way to add header.
Type 1: Inside the method declear header.
createPlan2(link, data) {
    return axios(link, {
		headers: {
			Authorization: token,
			'SignalRConnectionId': '8ce05f33-570c-4b0c-9abd-b2252d3fcc08',
			'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        headers: headers,
        method: 'POST',
        body: data
    });
}
Type 2: Declear header at first and then call it in the method.
const headers = new Headers();
headers.set("Authorization", token);
headers.set("SignalRConnectionId", '8ce05f33-570c-4b0c-9abd-b2252d3fcc08');
headers.set("Accept", "application/json");
headers.set("Content-Type", "application/json");
console.log(headers);

export default class PostService{
	createPlan2(link, data) {
		return axios(link, {
            headers: headers,
			headers: headers,
			method: 'POST',
			body: data
		});
	}
}
====================================================================================================================================================================================
[ 17th February, 2020 ] [Step-12]

// Service Page
createPlan2(link, datas) {
	return axios(link, {
		headers: {
			Authorization: token,
			'SignalRConnectionId': '8ce05f33-570c-4b0c-9abd-b2252d3fcc08',
			'Accept': 'application/json',
			'Content-Type': 'application/json'
		},
		method: 'POST',
		data: {
			id: datas.id, 
			organizationType: datas.organizationType, 
			description: datas.description, 
			reportingFrequency: datas.reportingFrequency, 
			details: datas.details
		},
	});
}

// CreatePlan.vue

newPLanCreate() {
	const OrganizationReference = {
                        organization:
                            {
                                id: 27,
                                organizationType: "1",
                                description: "Test Canberra Unit",
                                reportingFrequency: "1",
                                details: null
                            },
                        year: 2019,
                        reportingTerm: 8,
                        reportingFrequency: 1
                    };
	const link = 'http://localhost:50009//reporting/v1/unit/plan/create2?year=' 
                        + OrganizationReference.year + '&reportingTerm=' + OrganizationReference.reportingTerm + '&reportingFrequency=' + OrganizationReference.reportingFrequency;

	unitPlanReportService
		.createPlan2(link, OrganizationReference.organization)
		.then(res => {
			console.log('this is the res : ');
			console.log(res.data);
		})
		.catch(err =>{
			console.log('this is the error : ');
			console.error(err);
		});
	console.log('data passed done');
}
====================================================================================================================================================================================
[ 18th February, 2020 ] [Step-13]

CreatePlan page setup.
====================================================================================================================================================================================
[ 19th February, 2020 ] [Step-14]

PlanAndReport page send the unit id to ReportLandingPage using localStorage and ReportLandingPage collect that id from localStorage and 
set data for "Report", "Organization", "Status" dynamically.

PlanAndReport.vue
------------------------
unitItemClick(id) {
	localStorage.setItem('planandreports_passing_unit_id', id);
	this.$router.push('/planandreports/report_landing_page');
}

ReportLandingPage.vue
------------------------
created() {
	const unit_item = [];
	const unitReportId = localStorage.getItem('planandreports_passing_unit_id');
	localStorage.removeItem('planandreports_passing_unit_id');
	unitPlanReportService
		.getSearchAllPage()
		.then(res => {
			res.data.items.forEach(function(i){
				if(i.id == unitReportId) {
                        unit_item.push(i.description);
                        unit_item.push(i.organization.description);
                        unit_item.push(i.reportStatusDescription);
                    }
			});
			this.selectedItem = unit_item;
		})
		.catch(err =>{
			console.error(err);
		});
}

Garvage code removed from PlanAndReport.vue and CreatePlan.vue
We can create new plan from CreatePlan.vue page.
CreatePlan.vue page is fully functional and done working. It works properly.
====================================================================================================================================================================================


====================================================================================================================================================================================


====================================================================================================================================================================================


====================================================================================================================================================================================


====================================================================================================================================================================================